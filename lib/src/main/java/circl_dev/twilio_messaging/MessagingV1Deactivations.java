/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package circl_dev.twilio_messaging;

import circl_dev.twilio_messaging.utils.HTTPClient;
import circl_dev.twilio_messaging.utils.HTTPRequest;
import circl_dev.twilio_messaging.utils.JSON;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;

public class MessagingV1Deactivations {
	
    /**
	 * FETCH_DEACTIVATION_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_DEACTIVATION_SERVERS = {
        "https://messaging.twilio.com",
    };
	
	private SDKConfiguration sdkConfiguration;

	public MessagingV1Deactivations(SDKConfiguration sdkConfiguration) {
		this.sdkConfiguration = sdkConfiguration;
	}

    /**
     * Fetch a list of all United States numbers that have been deactivated on a specific date.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public circl_dev.twilio_messaging.models.operations.FetchDeactivationResponse fetchDeactivation(circl_dev.twilio_messaging.models.operations.FetchDeactivationRequest request, circl_dev.twilio_messaging.models.operations.FetchDeactivationSecurity security) throws Exception {
        return this.fetchDeactivation(request, security, null);
    }

    /**
     * Fetch a list of all United States numbers that have been deactivated on a specific date.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @param serverURL an optional server URL to use
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public circl_dev.twilio_messaging.models.operations.FetchDeactivationResponse fetchDeactivation(circl_dev.twilio_messaging.models.operations.FetchDeactivationRequest request, circl_dev.twilio_messaging.models.operations.FetchDeactivationSecurity security, String serverURL) throws Exception {
        String baseUrl = circl_dev.twilio_messaging.utils.Utils.templateUrl(FETCH_DEACTIVATION_SERVERS[0], new java.util.HashMap<String, String>());
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = circl_dev.twilio_messaging.utils.Utils.generateURL(baseUrl, "/v1/Deactivations");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = circl_dev.twilio_messaging.utils.Utils.getQueryParams(circl_dev.twilio_messaging.models.operations.FetchDeactivationRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = circl_dev.twilio_messaging.utils.Utils.configureSecurityClient(this.sdkConfiguration.defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        circl_dev.twilio_messaging.models.operations.FetchDeactivationResponse res = new circl_dev.twilio_messaging.models.operations.FetchDeactivationResponse(contentType, httpRes.statusCode()) {{
            messagingV1Deactivation = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 307) {
            if (circl_dev.twilio_messaging.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                circl_dev.twilio_messaging.models.shared.MessagingV1Deactivation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), circl_dev.twilio_messaging.models.shared.MessagingV1Deactivation.class);
                res.messagingV1Deactivation = out;
            }
        }

        return res;
    }
}