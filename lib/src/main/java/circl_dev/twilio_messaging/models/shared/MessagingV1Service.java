/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package circl_dev.twilio_messaging.models.shared;

import circl_dev.twilio_messaging.utils.DateTimeDeserializer;
import circl_dev.twilio_messaging.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

/**
 * MessagingV1Service - Created
 */

public class MessagingV1Service {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public MessagingV1Service withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/sms/services#area-code-geomatch) on the Service Instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("area_code_geomatch")
    public Boolean areaCodeGeomatch;

    public MessagingV1Service withAreaCodeGeomatch(Boolean areaCodeGeomatch) {
        this.areaCodeGeomatch = areaCodeGeomatch;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public MessagingV1Service withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public MessagingV1Service withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The HTTP method we use to call `fallback_url`. Can be: `GET` or `POST`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fallback_method")
    public MessagingV1ServiceFallbackMethod fallbackMethod;

    public MessagingV1Service withFallbackMethod(MessagingV1ServiceFallbackMethod fallbackMethod) {
        this.fallbackMethod = fallbackMethod;
        return this;
    }
    
    /**
     * Whether to enable [Fallback to Long Code](https://www.twilio.com/docs/sms/services#fallback-to-long-code) for messages sent through the Service instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fallback_to_long_code")
    public Boolean fallbackToLongCode;

    public MessagingV1Service withFallbackToLongCode(Boolean fallbackToLongCode) {
        this.fallbackToLongCode = fallbackToLongCode;
        return this;
    }
    
    /**
     * The URL that we call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `fallback_url` defined for the Messaging Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fallback_url")
    public String fallbackUrl;

    public MessagingV1Service withFallbackUrl(String fallbackUrl) {
        this.fallbackUrl = fallbackUrl;
        return this;
    }
    
    /**
     * The string that you assigned to describe the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;

    public MessagingV1Service withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The HTTP method we use to call `inbound_request_url`. Can be `GET` or `POST`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inbound_method")
    public MessagingV1ServiceInboundMethod inboundMethod;

    public MessagingV1Service withInboundMethod(MessagingV1ServiceInboundMethod inboundMethod) {
        this.inboundMethod = inboundMethod;
        return this;
    }
    
    /**
     * The URL we call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled. All messages sent to the Twilio phone number or short code will not be logged and received on the Account. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `inbound_request_url` defined for the Messaging Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inbound_request_url")
    public String inboundRequestUrl;

    public MessagingV1Service withInboundRequestUrl(String inboundRequestUrl) {
        this.inboundRequestUrl = inboundRequestUrl;
        return this;
    }
    
    /**
     * The absolute URLs of related resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public MessagingV1ServiceLinks links;

    public MessagingV1Service withLinks(MessagingV1ServiceLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * Whether to enable the [MMS Converter](https://www.twilio.com/docs/sms/services#mms-converter) for messages sent through the Service instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mms_converter")
    public Boolean mmsConverter;

    public MessagingV1Service withMmsConverter(Boolean mmsConverter) {
        this.mmsConverter = mmsConverter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scan_message_content")
    public ServiceEnumScanMessageContent scanMessageContent;

    public MessagingV1Service withScanMessageContent(ServiceEnumScanMessageContent scanMessageContent) {
        this.scanMessageContent = scanMessageContent;
        return this;
    }
    
    /**
     * The unique string that we created to identify the Service resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public MessagingV1Service withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * Whether to enable [Smart Encoding](https://www.twilio.com/docs/sms/services#smart-encoding) for messages sent through the Service instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smart_encoding")
    public Boolean smartEncoding;

    public MessagingV1Service withSmartEncoding(Boolean smartEncoding) {
        this.smartEncoding = smartEncoding;
        return this;
    }
    
    /**
     * The URL we call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status_callback")
    public String statusCallback;

    public MessagingV1Service withStatusCallback(String statusCallback) {
        this.statusCallback = statusCallback;
        return this;
    }
    
    /**
     * Whether to enable [Sticky Sender](https://www.twilio.com/docs/sms/services#sticky-sender) on the Service instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sticky_sender")
    public Boolean stickySender;

    public MessagingV1Service withStickySender(Boolean stickySender) {
        this.stickySender = stickySender;
        return this;
    }
    
    /**
     * Reserved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("synchronous_validation")
    public Boolean synchronousValidation;

    public MessagingV1Service withSynchronousValidation(Boolean synchronousValidation) {
        this.synchronousValidation = synchronousValidation;
        return this;
    }
    
    /**
     * The absolute URL of the Service resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public MessagingV1Service withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Whether US A2P campaign is registered for this Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("us_app_to_person_registered")
    public Boolean usAppToPersonRegistered;

    public MessagingV1Service withUsAppToPersonRegistered(Boolean usAppToPersonRegistered) {
        this.usAppToPersonRegistered = usAppToPersonRegistered;
        return this;
    }
    
    /**
     * A boolean value that indicates either the webhook url configured on the phone number will be used or `inbound_request_url`/`fallback_url` url will be called when a message is received from the phone number. If this field is enabled then the webhook url defined on the phone number will override the `inbound_request_url`/`fallback_url` defined for the Messaging Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("use_inbound_webhook_on_number")
    public Boolean useInboundWebhookOnNumber;

    public MessagingV1Service withUseInboundWebhookOnNumber(Boolean useInboundWebhookOnNumber) {
        this.useInboundWebhookOnNumber = useInboundWebhookOnNumber;
        return this;
    }
    
    /**
     * A string that describes the scenario in which the Messaging Service will be used. Examples: [notification, marketing, verification, poll ..]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usecase")
    public String usecase;

    public MessagingV1Service withUsecase(String usecase) {
        this.usecase = usecase;
        return this;
    }
    
    /**
     * How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validity_period")
    public Long validityPeriod;

    public MessagingV1Service withValidityPeriod(Long validityPeriod) {
        this.validityPeriod = validityPeriod;
        return this;
    }
    
    public MessagingV1Service(){}
}
